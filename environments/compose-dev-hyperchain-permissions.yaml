groups:
  - name: admins
    members:
      - "0xeaAFbF6Fc352B0598e34f4F282939720D9cf0f59"
contracts:
  - address: "0xCE5430eC9f0ce6Ef05dfCBa2826303e69c2dd5d4"
    methods:
      # ERC20 standard
      - signature: function totalSupply() public view returns (uint256)
        read:
          type: public
        write:
          type: public
      - signature: function balanceOf(address account) public view returns (uint256)
        read:
          type: checkArgument
          argIndex: 0
        write:
          type: closed
      - signature: function allowance(address owner, address spender) public view returns (uint256)
        read:
          type: oneOf
          rules:
            - type: checkArgument
              argIndex: 0
            - type: checkArgument
              argIndex: 1
        write:
          type: closed
      - signature: function approve(address spender, uint256 value) public returns (bool)
        # This doesn't leek information because we validate that current user
        # is msg.sender.
        read:
          type: public
        write:
          type: public
      - signature: function transfer(address to, uint256 value) public returns (bool)
        # This doesn't leek information because we validate that current user
        # is msg.sender.
        read:
          type: public
        write:
          type: public
      - signature: function transferFrom(address from, address to, uint256 value) public returns (bool)
        # This doesn't leek information because we validate that current user
        # is msg.sender.
        read:
          type: public
        write:
          type: public

      #
      # Open Zeppelion extended methods
      #
      - signature: function increaseAllowance(address spender, address addedValue) public
        # This doesn't leek information because we validate that current user
        # is msg.sender.
        read:
          type: public
        write:
          type: public
      - signature: function decreaseAllowance(address spender, address subtractedValue) public
        # This doesn't leek information because we validate that current user
        # is msg.sender.
        read:
          type: public
        write:
          type: public
      - signature: function symbol() public view returns (string memory)
        read:
          type: public
        write:
          type: public
      - signature: function decimals() public view returns (uint8)
        read:
          type: public
        write:
          type: public

      #
      # IRC165
      #
      - signature: function supportsInterface(bytes4 interfaceID) external view returns (bool)
        read:
          type: public
        write:
          type: public

      #
      # Extended methods
      #
      - signature: function mint(address to, uint256 amount) public returns (bool)
        read:
          type: group
          groups:
            - admins
        write:
          type: group
          groups:
            - admins
      - signature: function publicThreshold(address target) public view returns (uint256, bool)
        read:
          type: public
        write:
          type: closed
      - signature: function changePublicThreshold(uint256 newThreshold) external
        read:
          type: public
        write:
          type: public

  - address: "0x3Be9c8E1549A6b4ae591553816e98b886A5D5874"
    methods:
      # ERC164
      - signature: function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool)
        read:
          type: public
        write:
          type: closed
      # IERC721
      - signature: function balanceOf(address owner) public view returns (uint256)
        read:
          type: checkArgument
          argIndex: 0
        write:
          type: closed
      - signature: function ownerOf(uint256 tokenId) public view returns (address)
        read:
          type: public
        write:
          type: closed
        postRead:
          type: "responseIsCurrentUser"
          index: 0
      - signature: function safeTransferFrom(address from, address to, uint256 tokenId) public
        read:
          type: oneOf
          rules:
            - type: checkArgument
              argIndex: 0
            - type: checkArgument
              argIndex: 1
        write:
          type: oneOf
          rules:
            - type: checkArgument
              argIndex: 0
            - type: checkArgument
              argIndex: 1
      - signature: function approve(address to, uint256 tokenId) public
        read:
          type: public
        write:
          type: public
      - signature: function getApproved(uint256 tokenId) public view returns (address)
        read:
          type: public
        write:
          type: public
      - signature: function setApprovalForAll(address operator, bool approved) public
        read:
          type: public
        write:
          type: public
      - signature: function isApprovedForAll(address owner, address operator) public view returns (bool)
        read:
          type: public
        write:
          type: public
      - signature: function safeTransferFrom(address from, address to, uint256 tokenId) public
        # This work because we check that msg.sender is the current user and the method reverts
        # if msg.sender has no permission over the token to move.
        read:
          type: public
        write:
          type: public
      # ERC721Metadata
      - signature: function name() public view returns (string)
        read:
          type: public
        write:
          type: public
      - signature: function symbol() public view rtual returns (string)
        read:
          type: public
        write:
          type: public
      - signature: function tokenURI(uint256 tokenId) public view returns (string memory)
        read:
          type: public
        write:
          type: public
      # ERC721MetadataEnumerable
      - signature: totalSupply()
        read:
          type: public
        write:
          type: public
      - signature: function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256)
        read:
          type: checkArgument
          argIndex: 0
        write:
          type: checkArgument
          argIndex: 0
      - signature: function tokenByIndex(uint256 index) public view returns (uint256)
        read:
          type: checkArgument
          argIndex: 0
        write:
          type: checkArgument
          argIndex: 0

      # Extender methods
      - signature: function mintNext(address target) public returns (uint256)
        read:
          type: group
          groups:
            - admins
        write:
          type: group
          groups:
            - admins
      - signature: function publicInventory(address owner) public view returns (uint256[])
        read:
          type: public
        write:
          type: public
      - signature: function expose(uint256 tokenId) public
        read:
          type: public
        write:
          type: public
      - signature: function hide(uint256 tokenId) public
        read:
          type: public
        write:
          type: public
